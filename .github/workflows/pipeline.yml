name: Testing and Deployment
on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18" 
      - run: cd backend && npm install
      - run: cd backend && npm test
      - run: cd backend && npm run test:e2e 
  BuildandDeply:
    runs-on: ubuntu-latest
    needs: Test
    steps: 
      - name: check out repository code
        uses: actions/checkout@v3
      - name: add code to EC2 and and Start Containers (Build & Deply)
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIATE_KEY }}
          HOSTNAME: ${{ secrets.EC2_HOSTNAME }}
          USER_NAME: ubuntu
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            /usr/libexec/docker/cli-plugins/docker-compose --env-file ./backend/prod.env down
            rm -Rf unreal-math-operator
            git clone https://github.com/Ramzi-dev611/unreal-math-operator.git
            cd unreal-math-operator/backend
            touch prod.env
            echo "DB_HOST=${{secrets.DB_HOST}}" >> prod.env
            echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> prod.env
            echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> prod.env
            echo "DB_NAME=${{secrets.DB_NAME}}" >> prod.env
            echo "SYNC_OPTION=${{secrets.SYNC_OPTION}}" >> prod.env
            echo "JWT_SECRET=${{secrets.JWT_SECRET}}" >> prod.env
            cd ..
            /usr/libexec/docker/cli-plugins/docker-compose --env-file ./backend/prod.env up --build
          '